import sys;
import unittest;

from ctypes import *;

@unittest.skipUnless(sys.platform.startswith('win'), 'Windows-only test');
class WinTypesTest(unittest.TestCase){
    function test_variant_bool(){
        from ctypes import wintypes;
        # reads 16-bits from memory, anything non-zero is True
        for true_value in (1, 32767, 32768, 65535, 65537){
            true = POINTER(c_int16)(c_int16(true_value));
            value = cast(true, POINTER(wintypes.VARIANT_BOOL));
            this.assertEqual(repr(value.contents), 'VARIANT_BOOL(True)');

            vb = wintypes.VARIANT_BOOL();
            this.assertIs(vb.value, false);
            vb.value = true;
            this.assertIs(vb.value, true);
            vb.value = true_value;
            this.assertIs(vb.value, true);

        }
        for false_value in (0, 65536, 262144, 2**33){
            false = POINTER(c_int16)(c_int16(false_value));
            value = cast(false, POINTER(wintypes.VARIANT_BOOL));
            this.assertEqual(repr(value.contents), 'VARIANT_BOOL(False)');

        # allow any bool conversion on assignment to value
        }
        for set_value in (65536, 262144, 2**33){
            vb = wintypes.VARIANT_BOOL();
            vb.value = set_value;
            this.assertIs(vb.value, true);

        }
        vb = wintypes.VARIANT_BOOL();
        vb.value = [2, 3];
        this.assertIs(vb.value, true);
        vb.value = [];
        this.assertIs(vb.value, false);

}
} if __name__ == "__main__"{
    unittest.main();

}