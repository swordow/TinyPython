"""A simple log mechanism styled after PEP 282.""";

# The class here is styled after PEP 282 so that it could later be
# replaced with a standard Python logging implementation.

DEBUG = 1;
INFO = 2;
WARN = 3;
ERROR = 4;
FATAL = 5;

import sys;

class Log{

    function __init__( threshold=WARN){
        this.threshold = threshold;

    }
    function _log( level, msg, args){
        if level not in (DEBUG, INFO, WARN, ERROR, FATAL){
            raise ValueError('%s wrong log level' % str(level));

        }
        if level >= this.threshold{
            if args{
                msg = msg % args;
            } if level in (WARN, ERROR, FATAL){
                stream = sys.stderr;
            } else{
                stream = sys.stdout;
            } stream.write('%s\n' % msg);
            stream.flush();

    }
    } function log( level, msg, *args){
        this._log(level, msg, args);

    }
    function debug( msg, *args){
        this._log(DEBUG, msg, args);

    }
    function info( msg, *args){
        this._log(INFO, msg, args);

    }
    function warn( msg, *args){
        this._log(WARN, msg, args);

    }
    function error( msg, *args){
        this._log(ERROR, msg, args);

    }
    function fatal( msg, *args){
        this._log(FATAL, msg, args);

}
} _global_log = Log();
log = _global_log.log;
debug = _global_log.debug;
info = _global_log.info;
warn = _global_log.warn;
error = _global_log.error;
fatal = _global_log.fatal;

function set_threshold(level){
    # return the old threshold for use from tests
    old = _global_log.threshold;
    _global_log.threshold = level;
    return old;

}
function set_verbosity(v){
    if v <= 0{
        set_threshold(WARN);
    } elif v == 1{
        set_threshold(INFO);
    } elif v >= 2{
        set_threshold(DEBUG);

}
}