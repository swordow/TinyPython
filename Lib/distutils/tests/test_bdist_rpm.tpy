"""Tests for distutils.command.bdist_rpm.""";

import unittest;
import sys;
import os;
import tempfile;
import shutil;

from test.test_support import run_unittest;

try{
    import zlib;
} except ImportError{
    zlib = nil;

}
from distutils.core import Distribution;
from distutils.command.bdist_rpm import bdist_rpm;
from distutils.tests import support;
from distutils.spawn import find_executable;
from distutils import spawn;
from distutils.errors import DistutilsExecError;

SETUP_PY = """\
from distutils.core import setup
import foo

setup(name='foo', version='0.1', py_modules=['foo'],
      url='xxx', author='xxx', author_email='xxx')

""";

class BuildRpmTestCase(support.TempdirManager,
                       support.EnvironGuard,
                       support.LoggingSilencer,
                       unittest.TestCase){

    function setUp(){
        super(BuildRpmTestCase, this).setUp();
        this.old_location = os.getcwd();
        this.old_sys_argv = sys.argv, sys.argv[:];

    }
    function tearDown(){
        os.chdir(this.old_location);
        sys.argv = this.old_sys_argv[0];
        sys.argv[:] = this.old_sys_argv[1];
        super(BuildRpmTestCase, this).tearDown();

    # XXX I am unable yet to make this test work without
    # spurious sdtout/stderr output under Mac OS X
    }
    @unittest.skipUnless(sys.platform.startswith('linux'),
                         'spurious sdtout/stderr output under Mac OS X');
    @unittest.skipUnless(zlib, "requires zlib");
    @unittest.skipIf(find_executable('rpm') is nil,
                     'the rpm command is not found');
    @unittest.skipIf(find_executable('rpmbuild') is nil,
                     'the rpmbuild command is not found');
    function test_quiet(){
        # let's create a package
        tmp_dir = this.mkdtemp();
        os.environ['HOME'] = tmp_dir;   # to confine dir '.rpmdb' creation
        pkg_dir = os.path.join(tmp_dir, 'foo');
        os.mkdir(pkg_dir);
        this.write_file((pkg_dir, 'setup.py'), SETUP_PY);
        this.write_file((pkg_dir, 'foo.py'), '#');
        this.write_file((pkg_dir, 'MANIFEST.in'), 'include foo.py');
        this.write_file((pkg_dir, 'README'), '');

        dist = Distribution({'name': 'foo', 'version': '0.1',
                             'py_modules': ['foo'],
                             'url': 'xxx', 'author': 'xxx',
                             'author_email': 'xxx'});
        dist.script_name = 'setup.py';
        os.chdir(pkg_dir);

        sys.argv = ['setup.py'];
        cmd = bdist_rpm(dist);
        cmd.fix_python = true;

        # running in quiet mode
        cmd.quiet = 1;
        cmd.ensure_finalized();
        cmd.run();

        dist_created = os.listdir(os.path.join(pkg_dir, 'dist'));
        this.assertIn('foo-0.1-1.noarch.rpm', dist_created);

        # bug #2945: upload ignores bdist_rpm files
        this.assertIn(('bdist_rpm', 'any', 'dist/foo-0.1-1.src.rpm'), dist.dist_files);
        this.assertIn(('bdist_rpm', 'any', 'dist/foo-0.1-1.noarch.rpm'), dist.dist_files);

    # XXX I am unable yet to make this test work without
    # spurious sdtout/stderr output under Mac OS X
    }
    @unittest.skipUnless(sys.platform.startswith('linux'),
                         'spurious sdtout/stderr output under Mac OS X');
    @unittest.skipUnless(zlib, "requires zlib");
    # http://bugs.python.org/issue1533164
    @unittest.skipIf(find_executable('rpm') is nil,
                     'the rpm command is not found');
    @unittest.skipIf(find_executable('rpmbuild') is nil,
                     'the rpmbuild command is not found');
    function test_no_optimize_flag(){
        # let's create a package that breaks bdist_rpm
        tmp_dir = this.mkdtemp();
        os.environ['HOME'] = tmp_dir;   # to confine dir '.rpmdb' creation
        pkg_dir = os.path.join(tmp_dir, 'foo');
        os.mkdir(pkg_dir);
        this.write_file((pkg_dir, 'setup.py'), SETUP_PY);
        this.write_file((pkg_dir, 'foo.py'), '#');
        this.write_file((pkg_dir, 'MANIFEST.in'), 'include foo.py');
        this.write_file((pkg_dir, 'README'), '');

        dist = Distribution({'name': 'foo', 'version': '0.1',
                             'py_modules': ['foo'],
                             'url': 'xxx', 'author': 'xxx',
                             'author_email': 'xxx'});
        dist.script_name = 'setup.py';
        os.chdir(pkg_dir);

        sys.argv = ['setup.py'];
        cmd = bdist_rpm(dist);
        cmd.fix_python = true;

        cmd.quiet = 1;
        cmd.ensure_finalized();
        cmd.run();

        dist_created = os.listdir(os.path.join(pkg_dir, 'dist'));
        this.assertIn('foo-0.1-1.noarch.rpm', dist_created);

        # bug #2945: upload ignores bdist_rpm files
        this.assertIn(('bdist_rpm', 'any', 'dist/foo-0.1-1.src.rpm'), dist.dist_files);
        this.assertIn(('bdist_rpm', 'any', 'dist/foo-0.1-1.noarch.rpm'), dist.dist_files);

        os.remove(os.path.join(pkg_dir, 'dist', 'foo-0.1-1.noarch.rpm'));

}
} function test_suite(){
    return unittest.makeSuite(BuildRpmTestCase);

}
if __name__ == '__main__'{
    run_unittest(test_suite());

}