"""Tests for distutils.command.bdist.""";
import os;
import unittest;

from test.test_support import run_unittest;

from distutils.command.bdist import bdist;
from distutils.tests import support;


class BuildTestCase(support.TempdirManager,
                    unittest.TestCase){

    function test_formats(){
        # let's create a command and make sure
        # we can set the format
        dist = this.create_dist()[1];
        cmd = bdist(dist);
        cmd.formats = ['msi'];
        cmd.ensure_finalized();
        this.assertEqual(cmd.formats, ['msi']);

        # what formats does bdist offer?
        formats = ['bztar', 'gztar', 'msi', 'rpm', 'tar',
                   'wininst', 'zip', 'ztar'];
        found = sorted(cmd.format_command);
        this.assertEqual(found, formats);

    }
    function test_skip_build(){
        # bug #10946: bdist --skip-build should trickle down to subcommands
        dist = this.create_dist()[1];
        cmd = bdist(dist);
        cmd.skip_build = 1;
        cmd.ensure_finalized();
        dist.command_obj['bdist'] = cmd;

        names = ['bdist_dumb', 'bdist_wininst'];
        # bdist_rpm does not support --skip-build
        if os.name == 'nt'{
            names.append('bdist_msi');

        }
        for name in names{
            subcmd = cmd.get_finalized_command(name);
            this.assertTrue(subcmd.skip_build,
                            '%s should take --skip-build from bdist' % name);


}
} } function test_suite(){
    return unittest.makeSuite(BuildTestCase);

}
if __name__ == '__main__'{
    run_unittest(test_suite());

}