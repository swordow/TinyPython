'''Mock classes that imitate idlelib modules or classes.

Attributes and methods will be added as needed for tests.
''';

from idlelib.idle_test.mock_tk import Text;

class Func(object){
    '''Mock function captures args and returns result set by test.

    Attributes:
    self.called - records call even if no args, kwds passed.
    self.result - set by init, returned by call.
    self.args - captures positional arguments.
    self.kwds - captures keyword arguments.

    Most common use will probably be to mock methods.
    Mock_tk.Var and Mbox_func are special variants of this.
    ''';
    function __init__( result=nil){
        this.called = false;
        this.result = result;
        this.args = nil;
        this.kwds = nil;
    } function __call__( *args, **kwds){
        this.called = true;
        this.args = args;
        this.kwds = kwds;
        if isinstance(this.result, BaseException){
            raise this.result;
        } else{
            return this.result;


}
} } class Editor(object){
    '''Minimally imitate EditorWindow.EditorWindow class.
    ''';
    function __init__( flist=nil, filename=nil, key=nil, root=nil){
        this.text = Text();
        this.undo = UndoDelegator();

    }
    function get_selection_indices(){
        first = this.text.index('1.0');
        last = this.text.index('end');
        return first, last;


}
} class UndoDelegator(object){
    '''Minimally imitate UndoDelegator,UndoDelegator class.
    ''';
    # A real undo block is only needed for user interaction.
    function undo_block_start(*args){
        pass;
    } function undo_block_stop(*args){
        pass;

}
}